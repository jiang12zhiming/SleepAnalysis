// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import WatchKit;
@import WatchConnectivity;
@import CoreMotion;
@import HealthKit;
@import Foundation;
@import CoreData;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class WCSession;
@class WKRefreshBackgroundTask;

SWIFT_CLASS("_TtC29motionAwareWatchApp_Extension17ExtensionDelegate")
@interface ExtensionDelegate : NSObject <WKExtensionDelegate, WCSessionDelegate>
- (void)session:(WCSession * _Nonnull)session activationDidCompleteWithState:(WCSessionActivationState)activationState error:(NSError * _Nullable)error;
- (void)applicationDidFinishLaunching;
- (void)applicationDidBecomeActive;
- (void)applicationWillResignActive;
- (void)handleBackgroundTasks:(NSSet<WKRefreshBackgroundTask *> * _Nonnull)backgroundTasks;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDate;
@class NSManagedObject;
@class WKInterfaceLabel;
@class CMMotionManager;
@class HKWorkoutSession;
@class HKUnit;
@class HKQuery;
@class HKHealthStore;

SWIFT_CLASS("_TtC29motionAwareWatchApp_Extension19InterfaceController")
@interface InterfaceController : WKInterfaceController <WCSessionDelegate>
@property (nonatomic) double accAxisX;
@property (nonatomic) double accAxisY;
@property (nonatomic) double accAxisZ;
@property (nonatomic) double rotAxisX;
@property (nonatomic) double rotAxisY;
@property (nonatomic) double rotAxisZ;
@property (nonatomic) double gravAxisX;
@property (nonatomic) double gravAxisY;
@property (nonatomic) double gravAxisZ;
@property (nonatomic) double attAxisRoll;
@property (nonatomic) double attAxisPitch;
@property (nonatomic) double attAxisYaw;
@property (nonatomic, strong) NSDate * _Nullable timeStampVar;
@property (nonatomic, copy) NSArray<NSManagedObject *> * _Nonnull fetchedStatsArray;
@property (nonatomic, strong) IBOutlet WKInterfaceLabel * _Null_unspecified heartRatelabel;
@property (nonatomic, strong) CMMotionManager * _Nonnull watchMotionManager;
@property (nonatomic, readonly, strong) WCSession * _Nonnull session;
@property (nonatomic) BOOL workoutActive;
@property (nonatomic, strong) HKWorkoutSession * _Nullable workoutSessionVar;
@property (nonatomic, readonly, strong) HKUnit * _Nonnull heartRateUnit;
@property (nonatomic, strong) HKQuery * _Nullable currenQuery;
@property (nonatomic, readonly, strong) HKHealthStore * _Nonnull healthStore;
- (void)session:(WCSession * _Nonnull)session activationDidCompleteWithState:(WCSessionActivationState)activationState error:(NSError * _Nullable)error;
@property (nonatomic, strong) IBOutlet WKInterfaceLabel * _Null_unspecified samplingState;
- (void)awakeWithContext:(id _Nullable)context;
- (void)willActivate;
- (void)didDeactivate;
- (void)setupWatchConnect;
- (IBAction)startMotionDataSampling;
- (IBAction)stopMotionDataSampling;
- (IBAction)exportDataToFile;
- (IBAction)SendFileToMainApp;
- (void)sessionReachabilityDidChange:(WCSession * _Nonnull)session;
- (void)setupWatchConnectivity;
- (void)deletRecords;
- (void)outputWatchAcceleationDataWithWatchAcceleration:(CMAcceleration)watchAcceleration;
- (void)outputWatchRotationDataWithWatchRotation:(CMRotationRate)watchRotation;
- (void)storeTranscription;
- (void)getTranscriptions;
- (void)exportDatabase;
- (void)saveAndExportWithExportString:(NSString * _Nonnull)exportString;
- (NSString * _Nonnull)createExportString;
- (void)fileExistance;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class HKSample;

@interface InterfaceController (SWIFT_EXTENSION(motionAwareWatchApp_Extension)) <HKWorkoutSessionDelegate>
- (void)displayNotAllowed;
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didChangeToState:(HKWorkoutSessionState)toState fromState:(HKWorkoutSessionState)fromState date:(NSDate * _Nonnull)date;
- (void)workoutSession:(HKWorkoutSession * _Nonnull)workoutSession didFailWithError:(NSError * _Nonnull)error;
- (void)workoutDidStart:(NSDate * _Nonnull)date;
- (void)workoutDidEnd:(NSDate * _Nonnull)date;
- (void)startWorkout;
- (HKQuery * _Nullable)createHeartRateStreamingQuery:(NSDate * _Nonnull)workoutStartDate;
- (void)updateHeartRate:(NSArray<HKSample *> * _Nullable)samples;
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("MotionDataSet")
@interface MotionDataSet : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface MotionDataSet (SWIFT_EXTENSION(motionAwareWatchApp_Extension))
@property (nonatomic) double accX;
@property (nonatomic) double accY;
@property (nonatomic) double accZ;
@property (nonatomic) double rotX;
@property (nonatomic) double rotY;
@property (nonatomic) double rotZ;
@property (nonatomic) double attRoll;
@property (nonatomic) double attPitch;
@property (nonatomic) double attYaw;
@property (nonatomic) double gravX;
@property (nonatomic) double gravY;
@property (nonatomic) double gravZ;
@property (nonatomic, strong) NSDate * _Nullable timeStamp;
@end


SWIFT_CLASS("_TtC29motionAwareWatchApp_Extension22NotificationController")
@interface NotificationController : WKUserNotificationInterfaceController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)willActivate;
- (void)didDeactivate;
@end

#pragma clang diagnostic pop
